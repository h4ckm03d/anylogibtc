// Code generated by ent, DO NOT EDIT.

package ent

import (
	"anylogibtc/ent/schema"
	"anylogibtc/ent/transaction"
	"anylogibtc/ent/wallet"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescDatetime is the schema descriptor for datetime field.
	transactionDescDatetime := transactionFields[0].Descriptor()
	// transaction.DefaultDatetime holds the default value on creation for the datetime field.
	transaction.DefaultDatetime = transactionDescDatetime.Default.(time.Time)
	walletFields := schema.Wallet{}.Fields()
	_ = walletFields
	// walletDescCreatedAt is the schema descriptor for created_at field.
	walletDescCreatedAt := walletFields[1].Descriptor()
	// wallet.DefaultCreatedAt holds the default value on creation for the created_at field.
	wallet.DefaultCreatedAt = walletDescCreatedAt.Default.(time.Time)
	// walletDescUpdatedAt is the schema descriptor for updated_at field.
	walletDescUpdatedAt := walletFields[2].Descriptor()
	// wallet.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	wallet.DefaultUpdatedAt = walletDescUpdatedAt.Default.(time.Time)
}
